{ simple:
   { name: 'simple',
     create: [Function],
     apply: [Function],
     transform: [Function] },
  count:
   { name: 'count',
     create: [Function],
     apply: [Function],
     transform: [Function],
     compose: [Function],
     generateRandomOp: [Function] },
  text:
   { name: 'text',
     create: [Function],
     apply: [Function],
     _append: [Function],
     compose: [Function],
     compress: [Function],
     normalize: [Function],
     transformCursor: [Function],
     _tc: [Function],
     invert: [Function],
     transformX: [Function],
     transform: [Function],
     api:
      { provides: [Object],
        getLength: [Function],
        getText: [Function],
        insert: [Function],
        del: [Function],
        _register: [Function] } },
  text2:
   { name: 'text2',
     create: [Function],
     normalize: [Function],
     apply: [Function],
     transform: [Function],
     compose: [Function],
     transformCursor: [Function],
     api:
      { provides: [Object],
        getLength: [Function],
        getText: [Function],
        insert: [Function],
        del: [Function],
        _register: [Function] } },
  'text-composable':
   { name: 'text-composable',
     create: [Function],
     _makeAppend: [Function],
     normalize: [Function],
     apply: [Function],
     transform: [Function],
     compose: [Function],
     invert: [Function],
     api:
      { provides: [Object],
        getLength: [Function],
        getText: [Function],
        insert: [Function],
        del: [Function],
        _register: [Function] } },
  'text-tp2':
   { name: 'text-tp2',
     tp2: true,
     create: [Function],
     serialize: [Function],
     deserialize: [Function],
     _takeDoc: [Function],
     _appendDoc: [Function],
     apply: [Function],
     _append: [Function],
     normalize: [Function],
     transform: [Function],
     prune: [Function],
     compose: [Function],
     api:
      { provides: [Object],
        getLength: [Function],
        getText: [Function],
        insert: [Function],
        del: [Function],
        _register: [Function] } },
  json:
   { name: 'json',
     create: [Function],
     invertComponent: [Function],
     invert: [Function],
     checkValidOp: [Function],
     checkList: [Function],
     checkObj: [Function],
     apply: [Function],
     pathMatches: [Function],
     append: [Function],
     compose: [Function],
     normalize: [Function],
     canOpAffectOp: [Function],
     transformComponent: [Function],
     transformX: [Function],
     transform: [Function],
     api:
      { provides: [Object],
        at: [Function],
        get: [Function],
        set: [Function],
        getAt: [Function],
        setAt: [Function],
        removeAt: [Function],
        insertAt: [Function],
        moveAt: [Function],
        addAt: [Function],
        deleteTextAt: [Function],
        addListener: [Function],
        removeListener: [Function],
        _register: [Function] } },
  etherpad:
   { Changeset:
      { error: [Function: error],
        assert: [Function: assert],
        parseNum: [Function],
        numToString: [Function],
        toBaseTen: [Function],
        oldLen: [Function],
        newLen: [Function],
        opIterator: [Function],
        clearOp: [Function],
        newOp: [Function],
        cloneOp: [Function],
        copyOp: [Function],
        opString: [Function],
        stringOp: [Function],
        checkRep: [Function],
        smartOpAssembler: [Function],
        mergingOpAssembler: [Function],
        opAssembler: [Function],
        stringIterator: [Function],
        stringAssembler: [Function],
        applyZip: [Function],
        unpack: [Function],
        pack: [Function],
        applyToText: [Function],
        composeAttributes: [Function],
        _slicerZipperFunc: [Function],
        applyToAttribution: [Function],
        compose: [Function],
        attributeTester: [Function],
        identity: [Function],
        moveOpsToNewPool: [Function],
        makeAttribution: [Function],
        eachAttribNumber: [Function],
        filterAttribNumbers: [Function],
        mapAttribNumbers: [Function],
        makeAText: [Function],
        applyToAText: [Function],
        cloneAText: [Function],
        copyAText: [Function],
        appendATextToAssembler: [Function],
        prepareForWire: [Function],
        isIdentity: [Function],
        opAttributeValue: [Function],
        attribsAttributeValue: [Function],
        builder: [Function],
        makeAttribsString: [Function],
        follow: [Function],
        followAttributes: [Function] },
     AttributePool: [Function],
     name: 'etherpad',
     create: [Function],
     tryDeserializeSnapshot: [Function],
     tryDeserializeOp: [Function],
     apply: [Function],
     transform: [Function],
     compose: [Function],
     serialize: [Function],
     serializeOp: [Function],
     deserialize: [Function],
     api:
      { provides: [Object],
        getLength: [Function],
        getText: [Function],
        mergeTokens: [Function],
        cloneIterator: [Function],
        consumeIterator: [Function],
        createIterator: [Function],
        setAttributes: [Function],
        getAttributes: [Function],
        insert: [Function],
        del: [Function],
        _register: [Function] } },
  undefined:
   { etherpad:
      { Changeset: [Object],
        AttributePool: [Function],
        name: 'etherpad',
        create: [Function],
        tryDeserializeSnapshot: [Function],
        tryDeserializeOp: [Function],
        apply: [Function],
        transform: [Function],
        compose: [Function],
        serialize: [Function],
        serializeOp: [Function],
        deserialize: [Function],
        api: [Object] } } }
